{"version":3,"sources":["officeTest.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","app","post","send","id","uuid","v4","officeName","officeType","end","err","res","have","status","body","be","a","officeData","get"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACAA,eAAKC,GAAL,CAASC,kBAAT,E,CARA;;AASAF,eAAKG,MAAL;AACAC,SAAS,QAAT,EAAmB,YAAM;AACvBA,WAAS,sBAAT,EAAiC,YAAM;AACrC;AACAC,OAAG,wBAAH,EAA6B,UAACC,IAAD,EAAU;AACpCN,qBAAKO,OAAL,CAAaC,gBAAb,EACIC,IADJ,CACS,iBADT,EAEIC,IAFJ,CAES;AACJC,YAAIC,eAAKC,EAAL,EADA;AAEJC,oBAAY,UAFR;AAGJC,oBAAY;AAHR,OAFT,EAOGC,GAPH,CAOO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIf,MAAJ,CAAWgB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIG,IAAJ,CAASlB,MAAT,CAAgBmB,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAjB;AACA,OAXJ;AAYD,KAbF;AAcA;AACED,OAAG,8BAAH,EAAmC,UAACC,IAAD,EAAU;AAC3C,UAAIkB,aAAa;AACfb,YAAIC,eAAKC,EAAL,EADW;AAEfC,oBAAY,UAFG;AAGfC,oBAAY;AAHG,OAAjB;AAKKf,qBAAKO,OAAL,CAAaC,gBAAb,EACKiB,GADL,CACS,iBADT,EAEMf,IAFN,CAEWc,UAFX,EAGKR,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,YAAIf,MAAJ,CAAWgB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIG,IAAJ,CAASlB,MAAT,CAAgBmB,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACAjB;AACF,OAPN;AAQH,KAdJ;;AAgBA;AACJ;;;;;;;;;;;;;;;AAeC,GAjDD;AAkDD,CAnDD","file":"officeTest.js","sourceRoot":"/home/aniebiet/Desktop/Politico/tests","sourcesContent":["// Import the dependencies for testing\nimport PartyModel from '../src/models/partyModel';\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../server';\nimport uuid from 'uuid';\n\n// Configure chai\nchai.use(chaiHttp);\nchai.should();\ndescribe(\"Office\", () => {\n  describe(\"POST /api/v1/offices\", () => {\n    // Test to POST new office record\n    it(\"should post new record\", (done) => {\n       chai.request(app)\n          .post('/api/v1/offices')\n          .send({\n            id: uuid.v4(),\n            officeName: \"Chairman\",\n            officeType: \"Local government\"\n          })\n         .end((err, res) => {\n           res.should.have.status(201);\n           res.body.should.be.a('object');\n           done();\n          });\n     });\n    // Test to GET all office record\n      it(\"should get all office record\", (done) => {\n        let officeData = {\n          id: uuid.v4(),\n          officeName: \"Chairman\",\n          officeType: \"Local government\"\n        }\n             chai.request(app)\n                 .get('/api/v1/offices')\n                  .send(officeData)\n                 .end((err, res) => {\n                     res.should.have.status(200);\n                     res.body.should.be.a('array');\n                     done();\n                  });\n         });\n\n      //test to GET a specific office record\n  /*    it(\"should get specific office record\", (done) => {\n        const officeData = {\n          id: uuid.v4(),\n          officeName: \"Chairman\",\n          officeType: \"Local government\"\n        }\n             chai.request(app)\n                 .get('/api/v1/offices/' + officeData.id)\n                 .send(officeData)\n                 .end((err, res) => {\n                     res.should.have.status(200);\n                     res.body.should.be.a('object');\n                     done();\n                  });\n         }); */\n  });\n});"]}