{"version":3,"sources":["partyModel.js"],"names":["Party","parties","data","newParty","id","uuid","v4","partyName","partyAddress","partyLogo","push","find","item","party","findOne","index","indexOf","splice"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,K;AACJ,mBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACD;;;;2BAEMC,I,EAAM;AACX,UAAMC,WAAW;AACfC,YAAIC,eAAKC,EAAL,EADW;AAEfC,mBAAWL,KAAKK,SAAL,IAAkB,EAFd;AAGfC,sBAAcN,KAAKM,YAAL,IAAqB,EAHpB;AAIfC,mBAAWP,KAAKO,SAAL,IAAkB;AAJd,OAAjB;AAMA,WAAKR,OAAL,CAAaS,IAAb,CAAkBP,QAAlB;AACA,aAAOA,QAAP;AACD;;;4BAEOC,E,EAAI;AACV,aAAO,KAAKH,OAAL,CAAaU,IAAb,CAAkB;AAAA,eAAQC,KAAKR,EAAL,KAAYA,EAApB;AAAA,OAAlB,CAAP;AACD;;;8BAES;AACR,aAAO,KAAKH,OAAZ;AACD;;;2BAEMG,E,EAAIF,I,EAAM;AACf,UAAMW,QAAQ,KAAKC,OAAL,CAAaV,EAAb,CAAd;AACA,UAAMW,QAAQ,KAAKd,OAAL,CAAae,OAAb,CAAqBH,KAArB,CAAd;AACA,WAAKZ,OAAL,CAAac,KAAb,EAAoBR,SAApB,GAAgCL,KAAKK,SAAL,IAAkBM,MAAMN,SAAxD;AACA,WAAKN,OAAL,CAAac,KAAb,EAAoBP,YAApB,GAAmCN,KAAKM,YAAL,IAAqBK,MAAML,YAA9D;AACA,WAAKP,OAAL,CAAac,KAAb,EAAoBN,SAApB,GAAgCP,KAAKO,SAAL,IAAkBI,MAAMJ,SAAxD;AACA,aAAO,KAAKR,OAAL,CAAac,KAAb,CAAP;AACD;;;4BAEMX,E,EAAI;AACT,UAAMS,QAAQ,KAAKC,OAAL,CAAaV,EAAb,CAAd;AACA,UAAMW,QAAQ,KAAKd,OAAL,CAAae,OAAb,CAAqBH,KAArB,CAAd;AACA,WAAKZ,OAAL,CAAagB,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;AACA,aAAO,EAAP;AACD;;;;;;kBAGY,IAAIf,KAAJ,E","file":"partyModel.js","sourceRoot":"/home/aniebiet/Desktop/Politico/src/models","sourcesContent":["import uuid from 'uuid';\n\nclass Party {\n  constructor() {\n    this.parties = [];\n  }\n\n  create(data) {\n    const newParty = {\n      id: uuid.v4(),\n      partyName: data.partyName || '',\n      partyAddress: data.partyAddress || '',\n      partyLogo: data.partyLogo || '',\n    };\n    this.parties.push(newParty);\n    return newParty;\n  }\n\n  findOne(id) {\n    return this.parties.find(item => item.id === id);\n  }\n\n  findAll() {\n    return this.parties;\n  }\n\n  update(id, data) {\n    const party = this.findOne(id);\n    const index = this.parties.indexOf(party);\n    this.parties[index].partyName = data.partyName || party.partyName;\n    this.parties[index].partyAddress = data.partyAddress || party.partyAddress;\n    this.parties[index].partyLogo = data.partyLogo || party.partyLogo;\n    return this.parties[index];\n  }\n\n  delete(id) {\n    const party = this.findOne(id);\n    const index = this.parties.indexOf(party);\n    this.parties.splice(index, 1);\n    return {};\n  }\n}\n\nexport default new Party();\n"]}