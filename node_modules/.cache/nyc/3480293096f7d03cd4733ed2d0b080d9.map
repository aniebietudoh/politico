{"version":3,"sources":["partyController.js"],"names":["Party","createParty","req","res","body","partyName","partyAddress","status","send","message","party","PartyModel","create","getAllParty","parties","findAll","getOneParty","findOne","params","id","updateParty","updatedParty","update","deleteParty","partyD","delete"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,QAAQ;AACZC,aADY,uBACAC,GADA,EACKC,GADL,EACU;AACpB,QAAI,CAACD,IAAIE,IAAJ,CAASC,SAAV,IAAuB,CAACH,IAAIE,IAAJ,CAASE,YAArC,EAAmD;AACjD,aAAOH,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,4CAAX,EAArB,CAAP;AACD;AACD,QAAMC,QAAQC,qBAAWC,MAAX,CAAkBV,IAAIE,IAAtB,CAAd;AACA,WAAOD,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB,CAAP;AACD,GAPW;AASZG,aATY,uBASAX,GATA,EASKC,GATL,EASU;AACpB,QAAMW,UAAUH,qBAAWI,OAAX,EAAhB;AACA,WAAOZ,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,OAArB,CAAP;AACD,GAZW;AAcZE,aAdY,uBAcAd,GAdA,EAcKC,GAdL,EAcU;AACpB,QAAMO,QAAQC,qBAAWM,OAAX,CAAmBf,IAAIgB,MAAJ,CAAWC,EAA9B,CAAd;AACA,QAAI,CAACT,KAAL,EAAY;AACV,aAAOP,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB,CAAP;AACD;AACD,WAAON,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB,CAAP;AACD,GApBW;AAsBZU,aAtBY,uBAsBAlB,GAtBA,EAsBKC,GAtBL,EAsBU;AACpB,QAAMO,QAAQC,qBAAWM,OAAX,CAAmBf,IAAIgB,MAAJ,CAAWC,EAA9B,CAAd;AACA,QAAI,CAACT,KAAL,EAAY;AACV,aAAOP,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB,CAAP;AACD;AACD,QAAMY,eAAeV,qBAAWW,MAAX,CAAkBpB,IAAIgB,MAAJ,CAAWC,EAA7B,EAAiCjB,IAAIE,IAArC,CAArB;AACA,WAAOD,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,YAArB,CAAP;AACD,GA7BW;AA+BZE,aA/BY,uBA+BArB,GA/BA,EA+BKC,GA/BL,EA+BU;AACpB,QAAMO,QAAQC,qBAAWM,OAAX,CAAmBf,IAAIgB,MAAJ,CAAWC,EAA9B,CAAd;AACA,QAAI,CAACT,KAAL,EAAY;AACV,aAAOP,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB,CAAP;AACD;AACD,QAAMe,SAASb,qBAAWc,MAAX,CAAkBvB,IAAIgB,MAAJ,CAAWC,EAA7B,CAAf;AACA,WAAOhB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBgB,MAArB,CAAP;AACD;AAtCW,CAAd;;kBAyCexB,K","file":"partyController.js","sourceRoot":"/home/aniebiet/Desktop/Politico/api/src/controllers","sourcesContent":["import PartyModel from '../models/partyModel';\n\nconst Party = {\n  createParty(req, res) {\n    if (!req.body.partyName && !req.body.partyAddress) {\n      return res.status(400).send({ message: 'party name and address fields are required' });\n    }\n    const party = PartyModel.create(req.body);\n    return res.status(201).send(party);\n  },\n\n  getAllParty(req, res) {\n    const parties = PartyModel.findAll();\n    return res.status(200).send(parties);\n  },\n\n  getOneParty(req, res) {\n    const party = PartyModel.findOne(req.params.id);\n    if (!party) {\n      return res.status(404).send({ message: 'Party not found' });\n    }\n    return res.status(200).send(party);\n  },\n\n  updateParty(req, res) {\n    const party = PartyModel.findOne(req.params.id);\n    if (!party) {\n      return res.status(404).send({ message: 'Party not found' });\n    }\n    const updatedParty = PartyModel.update(req.params.id, req.body);\n    return res.status(200).send(updatedParty);\n  },\n\n  deleteParty(req, res) {\n    const party = PartyModel.findOne(req.params.id);\n    if (!party) {\n      return res.status(404).send({ message: 'Party not found' });\n    }\n    const partyD = PartyModel.delete(req.params.id);\n    return res.status(204).send(partyD);\n  },\n};\n\nexport default Party;\n"]}