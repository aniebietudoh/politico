{"version":3,"sources":["partyTest.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","app","get","send","end","err","res","have","status","body","be","a","newParty","id","uuid","v4","partyName","partyAddress","partyLogo"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACAA,eAAKC,GAAL,CAASC,kBAAT,E,CARA;;AASAF,eAAKG,MAAL;AACAC,SAAS,OAAT,EAAkB,YAAM;AACpBA,aAAS,qBAAT,EAAgC,YAAM;AAClC;AACAC,WAAG,6BAAH,EAAkC,UAACC,IAAD,EAAU;AACvCN,2BAAKO,OAAL,CAAaC,gBAAb,EACKC,GADL,CACS,iBADT,EAEKC,IAFL,CAEU,EAAC,aAAa,KAAd,EAAqB,gBAAgB,OAArC,EAA8C,aAAa,iBAA3D,EAFV,EAGKC,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,oBAAIV,MAAJ,CAAWW,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,oBAAIG,IAAJ,CAASb,MAAT,CAAgBc,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACAZ;AACF,aAPN;AAQH,SATF;AAUA;AACAD,WAAG,kCAAH,EAAuC,UAACC,IAAD,EAAU;AAChD,gBAAIa,WAAY;AACfC,oBAAIC,eAAKC,EAAL,EADW;AAEhBC,2BAAW,KAFK;AAGhBC,8BAAc,OAHE;AAIhBC,2BAAW;AAJK,aAAhB;AAMIzB,2BAAKO,OAAL,CAAaC,gBAAb,EACKC,GADL,CACS,qBAAmBU,SAASC,EADrC,EAEKT,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,oBAAIV,MAAJ,CAAWW,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,oBAAIG,IAAJ,CAASb,MAAT,CAAgBc,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAZ;AACF,aANN;AAOH,SAdF;;AAgBA;AACAD,WAAG,sCAAH,EAA2C,UAACC,IAAD,EAAU;AAChD,gBAAMc,KAAK,CAAX;AACApB,2BAAKO,OAAL,CAAaC,gBAAb,EACKC,GADL,OACaW,EADb,EAEKT,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,oBAAIV,MAAJ,CAAWW,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACF,aALN;AAMH,SARF;AASH,KAvCD;AAwCH,CAzCD","file":"partyTest.js","sourceRoot":"/home/aniebiet/Desktop/Politico/tests","sourcesContent":["// Import the dependencies for testing\nimport PartyModel from '../src/models/partyModel';\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../server';\nimport uuid from 'uuid';\n\n// Configure chai\nchai.use(chaiHttp);\nchai.should();\ndescribe(\"Party\", () => {\n    describe(\"GET /api/v1/parties\", () => {\n        // Test to get all party record\n        it(\"should get all party record\", (done) => {\n             chai.request(app)\n                 .get('/api/v1/parties')\n                 .send({'partyName': 'PDP', 'partyAddress': 'Lagos', 'partyLogo': 'http://logo.com'})\n                 .end((err, res) => {\n                     res.should.have.status(200);\n                     res.body.should.be.a('array');\n                     done();\n                  });\n         });\n        // Test to get single party record\n        it(\"should get a single party record\", (done) => {\n        \tlet newParty = ({\n        \t\tid: uuid.v4(),\n      \t\t\tpartyName: 'APC',\n      \t\t\tpartyAddress: 'Lagos',\n      \t\t\tpartyLogo: 'http://logo.com'\n      \t\t});\n             chai.request(app)\n                 .get('/api/v1/parties/'+newParty.id)\n                 .end((err, res) => {\n                     res.should.have.status(200);\n                     res.body.should.be.a('object');\n                     done();\n                  });\n         });\n\n        // Test to not get single party record\n        it(\"should not get a single party record\", (done) => {\n             const id = 5;\n             chai.request(app)\n                 .get(`/${id}`)\n                 .end((err, res) => {\n                     res.should.have.status(404);\n                     done();\n                  });\n         });\n    });\n});"]}