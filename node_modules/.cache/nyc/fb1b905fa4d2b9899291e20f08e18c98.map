{"version":3,"sources":["officeModel.js"],"names":["Office","offices","data","newOffice","id","uuid","v4","officeName","officeType","push","find","item"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,M;AACJ,oBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACD;;;;2BAEMC,I,EAAM;AACX,UAAMC,YAAY;AAChBC,YAAIC,eAAKC,EAAL,EADY;AAEhBC,oBAAYL,KAAKK,UAAL,IAAmB,EAFf;AAGhBC,oBAAYN,KAAKM,UAAL,IAAmB;AAHf,OAAlB;AAKA,WAAKP,OAAL,CAAaQ,IAAb,CAAkBN,SAAlB;AACA,aAAOA,SAAP;AACD;;;8BAES;AACR,aAAO,KAAKF,OAAZ;AACD;;;4BAEOG,E,EAAI;AACV,aAAO,KAAKH,OAAL,CAAaS,IAAb,CAAkB;AAAA,eAAQC,KAAKP,EAAL,KAAYA,EAApB;AAAA,OAAlB,CAAP;AACD;;;;;;kBAIY,IAAIJ,MAAJ,E","file":"officeModel.js","sourceRoot":"/home/aniebiet/Desktop/Politico/src/models","sourcesContent":["import uuid from 'uuid';\n\nclass Office {\n  constructor() {\n    this.offices = [];\n  }\n\n  create(data) {\n    const newOffice = {\n      id: uuid.v4(),\n      officeName: data.officeName || '',\n      officeType: data.officeType || '',\n    };\n    this.offices.push(newOffice);\n    return newOffice;\n  }\n\n  findAll() {\n    return this.offices;\n  }\n\n  findOne(id) {\n    return this.offices.find(item => item.id === id);\n  }\n\n}\n\nexport default new Office();\n"]}